{"ast":null,"code":"var _jsxFileName = \"C:\\\\01. Local Drive\\\\Practice\\\\python\\\\Django\\\\react-noteapp-frontend\\\\src\\\\pages\\\\NotesListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ListItem from \"../components/ListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesListpage = () => {\n  _s();\n\n  let [notes, setNotes] = useState([]);\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  let getNotes = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes/');\n    let data = await response.json(); //console.log('Data:', data)\n\n    setNotes(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotesListpage, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = NotesListpage;\nexport default NotesListpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesListpage\");","map":{"version":3,"names":["React","useState","useEffect","ListItem","NotesListpage","notes","setNotes","getNotes","response","fetch","data","json","map","note","index"],"sources":["C:/01. Local Drive/Practice/python/Django/react-noteapp-frontend/src/pages/NotesListPage.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport ListItem from \"../components/ListItem\";\r\n\r\nconst NotesListpage = ()=>{\r\n    let [notes, setNotes] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getNotes()\r\n        }, [])\r\n\r\n    let getNotes = async ()=> {\r\n        let response = await fetch('http://127.0.0.1:8000/api/notes/')\r\n        let data = await response.json()\r\n        //console.log('Data:', data)\r\n        setNotes(data)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='notes-list'>\r\n                {\r\n                    notes.map((note, index) => (\r\n                        <ListItem/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default NotesListpage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,aAAa,GAAG,MAAI;EAAA;;EACtB,IAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAhC;EAEAC,SAAS,CAAC,MAAI;IACVK,QAAQ;EACP,CAFI,EAEF,EAFE,CAAT;;EAIA,IAAIA,QAAQ,GAAG,YAAW;IACtB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA1B;IACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB,CAFsB,CAGtB;;IACAL,QAAQ,CAACI,IAAD,CAAR;EACH,CALD;;EAMA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,YAAf;MAAA,UAEQL,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACN,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QADJ;IAFR;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAxBD;;GAAMV,a;;KAAAA,a;AAyBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}