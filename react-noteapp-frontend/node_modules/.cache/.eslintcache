[{"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\index.js":"1","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\App.js":"2","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\components\\Header.js":"3","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\pages\\NotesListPage.js":"4","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\pages\\NotePage.js":"5","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\components\\ListItem.js":"6","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\components\\AddButton.js":"7"},{"size":234,"mtime":1652356913859,"results":"8","hashOfConfig":"9"},{"size":758,"mtime":1659706723505,"results":"10","hashOfConfig":"9"},{"size":192,"mtime":1659435741893,"results":"11","hashOfConfig":"9"},{"size":1086,"mtime":1659517502980,"results":"12","hashOfConfig":"9"},{"size":2611,"mtime":1660067240405,"results":"13","hashOfConfig":"9"},{"size":912,"mtime":1659629573173,"results":"14","hashOfConfig":"9"},{"size":318,"mtime":1659517347118,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"123ja4v",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\index.js",[],[],"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\App.js",[],[],"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\components\\Header.js",[],[],"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\pages\\NotesListPage.js",[],[],"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\pages\\NotePage.js",["38"],[],"import React, {useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { ReactComponent as ArrowLeft} from \"../assets/arrow-left.svg\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst NotePage = ({match}) => {\r\n    const { id } = useParams()\r\n    const navigate = useNavigate();\r\n    let noteId = id\r\n    let [note, setNote] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        getNote()\r\n        }, [noteId])\r\n\r\n\r\n    let getNote = async ()=> {\r\n        if(noteId==='new') return\r\n\r\n        let response = await fetch(`/api/notes/${noteId}`)\r\n        let data = await response.json()\r\n        setNote(data)\r\n    }\r\n    let createNote = async ()=> {\r\n        fetch(`/api/notes/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n        navigate('/');\r\n    }\r\n\r\n    let updateNote = async ()=> {\r\n        fetch(`/api/notes/${noteId}/`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n        navigate('/');\r\n\r\n    }\r\n\r\n    let deleteNote = async ()=> {\r\n        fetch(`/api/notes/${noteId}/`,{\r\n            method:\"DELETE\",\r\n            headers: {\r\n                'content-type':'applocation/json'\r\n            }\r\n        })\r\n        navigate('/');\r\n    }\r\n\r\n    let handleSubmit = ()=> {\r\n        if(noteId!=='new' && !note.body){\r\n            //console.log('part1', note.body)\r\n            deleteNote()\r\n        } else if (noteId!=='new'){\r\n            //console.log(note.body)\r\n            updateNote()\r\n        } else if (noteId==='new' && note!=null){\r\n            //console.log('part3')\r\n            createNote()\r\n        }\r\n        //issues with history, use navigate instead\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={\"note\"}>\r\n            <div className={\"note-header\"}>\r\n                <h3>\r\n\r\n                    <ArrowLeft onClick= {handleSubmit} />\r\n\r\n                </h3>\r\n                {noteId!=='new'?(\r\n                    <button onClick={deleteNote}>Delete</button>\r\n                ):\r\n                    (\r\n                        <button onClick={handleSubmit}>Done</button>\r\n                    )\r\n\r\n                }\r\n\r\n            </div>\r\n            <textarea onChange={(e)=> {setNote({...note, 'body':e.target.value})}} value={note?.body}></textarea>\r\n\r\n        </div>\r\n    )\r\n}\r\n// do not use defuaultValue={note?.body} // use value={note?body} instead\r\nexport default NotePage","C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\components\\ListItem.js",[],[],"C:\\01. Local Drive\\Practice\\python\\Django\\DjangoReactNoteApplication\\react-noteapp-frontend\\src\\components\\AddButton.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":15,"column":12,"nodeType":"41","endLine":15,"endColumn":20,"suggestions":"42"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [getNote, noteId]",{"range":"46","text":"47"},[442,450],"[getNote, noteId]"]